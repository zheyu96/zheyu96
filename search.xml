<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>C++與STL入門</title>
    <url>/2021/12/25/stl/</url>
    <content><![CDATA[<hr>
<p>tags: 演算法入門經典</p>
<hr>
<h2 id="UVA-00101-The-Blocks-Problem"><a href="#UVA-00101-The-Blocks-Problem" class="headerlink" title="UVA - 00101  The Blocks Problem"></a>UVA - 00101 <a href="https://onlinejudge.org/index.php?option=onlinejudge&page=show_problem&problem=37"> The Blocks Problem</a></h2><hr>
<p><a href="https://vjudge.net/solution/29663387">AC code</a><br><strong>題目簡述:</strong><br>vector應用<br><strong>想法:</strong><br>如果照題目的每個指令分別寫動作，會寫得很長(且不易debug)</p>
<ul>
<li><strong>HINT:觀察四個指令</strong><span id="more"></span>
<style>
.blue {
color:blue;
}
.red {
color:red ;
}
.green {
color:green;
}
.black {
color:black;
}
</style></li>
</ul>
<ol>
<li><span class="green">在將a搬到b上之前，<span class="blue">先將<span class="red">a和b上的積木<span class="blue">放回原來的位置</span></li>
<li><span class="green">在將a搬到b所在的那堆積木之上之前，<span class="red">先將a上的積木<span class="blue">放回原來的位罝</span></li>
<li><span class="red">將a本身和其上的積木<span class="green">一起放到b上，<span class="blue">在搬之前<span class="red">b上方的積木<span class="blue">放回原位</span></li>
</ol>
<ul>
<li><span class="black">說穿了就是<span class="red">判斷a,b(使用者輸入的號碼)所在的位址，<span class="green">指定範圍搬運(挪移)，<span class="blue">指定範圍恢復原狀</span></span></span></span><br>ㄎㄎ突然變得容易許多(良好的選定策略，能將實作code複雜程度and複雜度降低)<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line">vector &lt;<span class="keyword">int</span>&gt; v[<span class="number">30</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> &amp;p,<span class="keyword">int</span> &amp;h)</span></span>&#123;</span><br><span class="line">	<span class="keyword">for</span>(p=<span class="number">0</span>;p&lt;n;p++)</span><br><span class="line">		<span class="keyword">for</span>(h=<span class="number">0</span>;h&lt;v[p].<span class="built_in">size</span>();h++)</span><br><span class="line">			<span class="keyword">if</span>(v[p][h]==a) <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">clear</span><span class="params">(<span class="keyword">int</span> p,<span class="keyword">int</span> h)</span></span>&#123;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=h+<span class="number">1</span>;i&lt;v[p].<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">		<span class="keyword">int</span> ss=v[p][i];</span><br><span class="line">		v[ss].<span class="built_in">push_back</span>(ss);</span><br><span class="line">	&#125;</span><br><span class="line">	v[p].<span class="built_in">resize</span>(h+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">go</span><span class="params">(<span class="keyword">int</span> p1,<span class="keyword">int</span> h,<span class="keyword">int</span> p2)</span></span>&#123;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=h;i&lt;v[p1].<span class="built_in">size</span>();i++)</span><br><span class="line">		v[p2].<span class="built_in">push_back</span>(v[p1][i]);</span><br><span class="line">	v[p1].<span class="built_in">resize</span>(h);</span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> a,b;</span><br><span class="line">	<span class="keyword">while</span>(cin&gt;&gt;n)&#123;</span><br><span class="line">		string s1,s2;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) v[i].<span class="built_in">push_back</span>(i);</span><br><span class="line">		<span class="keyword">while</span>(cin&gt;&gt;s1)&#123; </span><br><span class="line">			<span class="keyword">if</span>(s1==<span class="string">&quot;quit&quot;</span>)&#123;</span><br><span class="line">				<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">					cout&lt;&lt;i&lt;&lt;<span class="string">&quot;:&quot;</span>;</span><br><span class="line">					<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;v[i].<span class="built_in">size</span>();j++)&#123;</span><br><span class="line">						cout&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;v[i][j]; </span><br><span class="line">					&#125;</span><br><span class="line">					cout&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">					v[i].<span class="built_in">resize</span>(<span class="number">0</span>);</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			cin&gt;&gt;a&gt;&gt;s2&gt;&gt;b;</span><br><span class="line">			<span class="keyword">int</span> pa,pb,ha,hb;</span><br><span class="line">			<span class="built_in">find</span>(a,pa,ha);</span><br><span class="line">			<span class="built_in">find</span>(b,pb,hb);</span><br><span class="line">			<span class="keyword">if</span>(pa==pb) <span class="keyword">continue</span>;</span><br><span class="line">			<span class="keyword">if</span>(s2==<span class="string">&quot;onto&quot;</span>) <span class="built_in">clear</span>(pb,hb);</span><br><span class="line">			<span class="keyword">if</span>(s1==<span class="string">&quot;move&quot;</span>) <span class="built_in">clear</span>(pa,ha);</span><br><span class="line">			<span class="built_in">go</span>(pa,ha,pb);</span><br><span class="line">		&#125;</span><br><span class="line">			 </span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><em>心得:</em>*<br>在實作時，一直卡在如何將搜尋a,b位址打包成在一起回傳(後來發現原來可以把函式宣告成vector&lt;int,int&gt;型態)或者如本題一樣用成&amp;位址(只是這個東西我不太知道怎麼解釋,待處理)然後原本寫法是一直pop_back，後來發現直接resize就好(一次解決)</li>
<li><em>相關語法資源整理*</em><br><a href="https://mropengate.blogspot.com/2015/07/cc-vector-stl.html">C/C++ - Vector (STL) 用法與心得完全攻略</a><br><a href="https://larry850806.github.io/2016/06/06/STL2/">[C++] STL 容器 (二) - Iterator</a><br>然後有一個好像很新的東東(我這題沒用到，下題會出現)–<em><strong>auto</strong></em><br><a href="https://blog.gtwang.org/programming/cpp-auto-variable-tutorial/">C++ 程式語言 auto 自動變數類型語法教學與範例</a></li>
</ul>
<h2 id="UVA-10815-Andy’s-First-Dictionary"><a href="#UVA-10815-Andy’s-First-Dictionary" class="headerlink" title="UVA - 10815 Andy’s First Dictionary "></a>UVA - 10815 <a href="https://onlinejudge.org/index.php?option=com_onlinejudge&Itemid=8&page=show_problem&problem=1756">Andy’s First Dictionary </a></h2><hr>
<p><a href="https://vjudge.net/solution/29664653">AC code</a><br><strong>題目簡述:</strong><br>set應用(<del>感覺比較像字串處理+排序</del>)<br><strong><del>沒有想法(直接暴力做)</del></strong></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line">set &lt;string&gt; dict;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	string a,buf;</span><br><span class="line">	<span class="keyword">while</span>(<span class="built_in">getline</span>(cin,a))&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;a.<span class="built_in">length</span>();i++)&#123;</span><br><span class="line">			<span class="keyword">if</span>(<span class="built_in">isalpha</span>(a[i])) a[i]=<span class="built_in">tolower</span>(a[i]); <span class="keyword">else</span> a[i]=<span class="string">&#x27; &#x27;</span>; </span><br><span class="line">		&#125;</span><br><span class="line">		<span class="function">stringstream <span class="title">ss</span><span class="params">(a)</span></span>;</span><br><span class="line">		<span class="keyword">while</span>(ss&gt;&gt;buf) dict.<span class="built_in">insert</span>(buf);</span><br><span class="line">	&#125;	</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">auto</span> i:dict)&#123;</span><br><span class="line">		cout&lt;&lt;i&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>
<p><strong>心得:</strong><br>這題看到許多神奇的輸出入，感覺這題就單純字串處理和set實作<br><strong>相關語法資源整理</strong><br><a href="http://tw.gitbook.net/c_standard_library/c_function_tolower.html">tolower語法</a><br><a href="https://home.gamer.com.tw/creationDetail.php?sn=4114818">stringstream用法整理</a><br>前面的寒訓講義也有</p>
<h2 id="UVA-00156-Ananagrams"><a href="#UVA-00156-Ananagrams" class="headerlink" title="UVA - 00156 Ananagrams"></a>UVA - 00156 <a href="https://onlinejudge.org/index.php?option=com_onlinejudge&Itemid=8&page=show_problem&problem=92">Ananagrams</a></h2><p><a href="https://vjudge.net/solution/29665366">AC code</a><br><strong>題目簡述:</strong><br>給一段文章，抓取其單詞，不管大小寫、字母順序，都無法變成同一文章的其他詞<br>(map應用)<br><strong>想法</strong><br>就利用剛剛學的tolower統一大小寫，並將字母做排序(e.g. APPLE-&gt;aelpp)<br>並透過map資料結構的特性做檢索</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line">map &lt;string,<span class="keyword">int</span>&gt; cnt;</span><br><span class="line">vector &lt;string&gt; word;</span><br><span class="line"><span class="function">string <span class="title">st</span> <span class="params">(string a)</span></span>&#123;</span><br><span class="line">	string ans=a;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;a.<span class="built_in">length</span>();i++)</span><br><span class="line">		ans[i]=<span class="built_in">tolower</span>(ans[i]);</span><br><span class="line">	<span class="built_in">sort</span>(ans.<span class="built_in">begin</span>(),ans.<span class="built_in">end</span>());</span><br><span class="line">	<span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	string s;</span><br><span class="line">	<span class="keyword">while</span>(cin&gt;&gt;s)&#123;</span><br><span class="line">		<span class="keyword">if</span>(s[<span class="number">0</span>]==<span class="string">&#x27;#&#x27;</span>) <span class="keyword">break</span>;</span><br><span class="line">		word.<span class="built_in">push_back</span>(s);</span><br><span class="line">		string r=<span class="built_in">st</span>(s);</span><br><span class="line">		<span class="keyword">if</span>(!cnt.<span class="built_in">count</span>(r)) cnt[r]=<span class="number">0</span>;</span><br><span class="line">		cnt[r]++;</span><br><span class="line">	&#125;</span><br><span class="line">	vector &lt;string&gt; ans;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;word.<span class="built_in">size</span>();i++)</span><br><span class="line">		<span class="keyword">if</span>(cnt[<span class="built_in">st</span>(word[i])]==<span class="number">1</span>) ans.<span class="built_in">push_back</span>(word[i]);</span><br><span class="line">	<span class="built_in">sort</span>(ans.<span class="built_in">begin</span>(),ans.<span class="built_in">end</span>());</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;ans.<span class="built_in">size</span>();i++)</span><br><span class="line">		cout&lt;&lt;ans[i]&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>
<p><strong>相關語法資源整理</strong><br><a href="https://mropengate.blogspot.com/2015/12/cc-map-stl.html">C/C++ - Map (STL) 用法與心得完全攻略</a></p>
<h2 id="UVA-12096The-SetStack-Computer"><a href="#UVA-12096The-SetStack-Computer" class="headerlink" title="UVA - 12096The SetStack Computer"></a>UVA - 12096<a href="https://onlinejudge.org/index.php?option=com_onlinejudge&Itemid=8&page=show_problem&problem=3248">The SetStack Computer</a></h2><p><strong>題目簡述</strong><br>set的set之操作(e.g.並集、交集…..應用) </p>
<blockquote>
<ul>
<li> 註:PUSH、DUP、ADD指令待釐清*</li>
</ul>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ALL(x) x.begin(),x.end()</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INS(x) inserter(x,x.begin())</span></span><br><span class="line"><span class="keyword">typedef</span> set&lt;<span class="keyword">int</span>&gt; SET;</span><br><span class="line">map&lt;SET,<span class="keyword">int</span>&gt; id_forsets; <span class="comment">//sets的id資料庫 </span></span><br><span class="line">vector&lt;SET&gt; sets; </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">id</span><span class="params">(SET x)</span></span>&#123;    <span class="comment">//尋找是否已建檔，否則建立賦予新id </span></span><br><span class="line">	<span class="keyword">if</span>(id_forsets.<span class="built_in">count</span>(x)) <span class="keyword">return</span> id_forsets[x];</span><br><span class="line">	sets.<span class="built_in">push_back</span>(x);</span><br><span class="line">	<span class="keyword">return</span> id_forsets[x]=sets.<span class="built_in">size</span>()<span class="number">-1</span>; </span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	stack&lt;<span class="keyword">int</span>&gt; s;  <span class="comment">//題目中的堆疊</span></span><br><span class="line">	<span class="keyword">int</span> qq; <span class="comment">//測資數量 </span></span><br><span class="line">	cin&gt;&gt;qq;</span><br><span class="line">	<span class="keyword">while</span>(qq--)&#123;</span><br><span class="line">		<span class="keyword">int</span> n; <span class="comment">//指令數量 </span></span><br><span class="line">		cin&gt;&gt;n;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">			string move; </span><br><span class="line">			cin&gt;&gt;move;  <span class="comment">//動作輸入  </span></span><br><span class="line">			<span class="keyword">if</span>(move==<span class="string">&quot;PUSH&quot;</span>) s.<span class="built_in">push</span>(<span class="built_in">id</span>(<span class="built_in">SET</span>()));  <span class="comment">//丟一個新的進去</span></span><br><span class="line">			<span class="keyword">else</span> <span class="keyword">if</span>(move==<span class="string">&quot;DUP&quot;</span>) s.<span class="built_in">push</span>(s.<span class="built_in">top</span>()); <span class="comment">//</span></span><br><span class="line">			<span class="keyword">else</span>&#123;</span><br><span class="line">				SET x1=sets[s.<span class="built_in">top</span>()]; s.<span class="built_in">pop</span>();</span><br><span class="line">				SET x2=sets[s.<span class="built_in">top</span>()]; s.<span class="built_in">pop</span>();</span><br><span class="line">				SET x;</span><br><span class="line">				<span class="keyword">if</span>(move==<span class="string">&quot;UNION&quot;</span>) <span class="built_in">set_union</span>(<span class="built_in">ALL</span>(x1),<span class="built_in">ALL</span>(x2),<span class="built_in">INS</span>(x)); <span class="comment">//並集 </span></span><br><span class="line">				<span class="keyword">if</span>(move==<span class="string">&quot;INTERSECT&quot;</span>) <span class="built_in">set_intersection</span>(<span class="built_in">ALL</span>(x1),<span class="built_in">ALL</span>(x2),<span class="built_in">INS</span>(x)); <span class="comment">//交集 </span></span><br><span class="line">				<span class="keyword">if</span>(move==<span class="string">&quot;ADD&quot;</span>)&#123; x=x2; x.<span class="built_in">insert</span>(<span class="built_in">id</span>(x1));&#125;  </span><br><span class="line">				s.<span class="built_in">push</span>(<span class="built_in">id</span>(x));</span><br><span class="line">			&#125;</span><br><span class="line">			cout&lt;&lt;sets[s.<span class="built_in">top</span>()].<span class="built_in">size</span>()&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		cout&lt;&lt;<span class="string">&quot;***\n&quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>心得</strong><br>這題真的不太好懂，連我也是一頭霧水<br><strong>相關語法資源整理</strong><br><a href="http://glj8989332.blogspot.com/2019/11/uva-12096-setstack-computer.html">[解題] UVa - 12096 The SetStack Computer</a><br><a href="https://www.itread01.com/content/1541725092.html">C++中STL用法總結【轉】</a><br><a href="https://www.bbsmax.com/A/QV5ZRQe75y/">UVA.12096 The SetStack Computer ( 好题 栈 STL混合应用)</a></p>
]]></content>
      <categories>
        <category>C++語法</category>
      </categories>
      <tags>
        <tag>演算法入門經典</tag>
        <tag>輸入輸出</tag>
      </tags>
  </entry>
  <entry>
    <title>data_structure</title>
    <url>/2021/12/25/data-structure/</url>
    <content><![CDATA[<h1 id="資料結構"><a href="#資料結構" class="headerlink" title="資料結構"></a>資料結構</h1><p>===<br>UVA - 10082 <a href="https://onlinejudge.org/index.php?option=com_onlinejudge&Itemid=8&page=show_problem&problem=1023">WERTYU</a></p>
<hr>
<p><a href="https://vjudge.net/solution/29308044">AC code</a><br><strong>題目簡述:</strong><br>鍵盤打字時，都剛好不小心往右打了一格，將它還原<br><strong>想法:</strong><br>用陣列建對應表，用if做對應表太冗(且不易閱讀)</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">char</span> t[]=&#123;<span class="string">&quot;`1234567890-=QWERTYUIOP[]\\ASDFGHJKL;&#x27;ZXCVBNM,./&quot;</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">char</span> a;</span><br><span class="line">	<span class="keyword">while</span>((a = <span class="built_in">getchar</span>()) != EOF)&#123; </span><br><span class="line">			<span class="keyword">if</span>(a==<span class="string">&#x27; &#x27;</span>||a==<span class="string">&#x27;\n&#x27;</span>)<span class="built_in">putchar</span>(a);</span><br><span class="line">			<span class="keyword">else</span>&#123;</span><br><span class="line">				<span class="keyword">int</span> j;</span><br><span class="line">				<span class="keyword">for</span>(j=<span class="number">0</span>;t[j]!=a;j++);</span><br><span class="line">				<span class="built_in">putchar</span>(t[j<span class="number">-1</span>]);</span><br><span class="line">			&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>心得:</strong><br>原先是使用getline，但後來發現換行符號會被吃掉導致WA，似乎還沒有string可以接收’\n’還能輸出的函式，只好回去用char讀取輸出<br><strong>輸入相關語法整理:</strong></p>
<p><a href="https://docs.google.com/presentation/d/1BsM0YxfVeavMv0_tLMll524OggXQ86LBK2MTISa5xx4/edit#slide=id.p">2020一中資訊社寒訓05：字串與IO</a><br>摘要:<a href="https://www.itread01.com/content/1542222967.html">C++裡getline()、get()、cin、getchar區別</a></p>
<h2 id="UVA-401-Palindromes"><a href="#UVA-401-Palindromes" class="headerlink" title="UVA - 401 Palindromes"></a>UVA - 401 <a href="https://onlinejudge.org/index.php?option=com_onlinejudge&Itemid=8&page=show_problem&problem=342">Palindromes</a></h2><p><a href="https://vjudge.net/solution/29344574">AC code</a><br><strong>題目簡述:</strong><br>輸入一字串，判斷是否為回文詞及鏡像詞，並輸出其種類<br><strong>想法</strong><br>這題蠻複雜的，尤其是網路上對於鏡像詞的解法，都搞得好複雜(還有用if一一對照的)，回文就是簡單的一一比對而已</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line">string ans[<span class="number">4</span>]=</span><br><span class="line">&#123;<span class="string">&quot; -- is not a palindrome.&quot;</span>,</span><br><span class="line"><span class="string">&quot; -- is a regular palindrome.&quot;</span>,</span><br><span class="line"><span class="string">&quot; -- is a mirrored string.&quot;</span>,</span><br><span class="line"><span class="string">&quot; -- is a mirrored palindrome.&quot;</span>&#125;;</span><br><span class="line">string mi=&#123;<span class="string">&quot;A   3  HIL JM O   2TUVWXY51SE Z  8 &quot;</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">char</span> <span class="title">rrr</span><span class="params">(<span class="keyword">char</span> st)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(<span class="built_in">isalpha</span>(st)) <span class="keyword">return</span> mi[st-<span class="string">&#x27;A&#x27;</span>];</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(st==<span class="string">&#x27;0&#x27;</span>) <span class="keyword">return</span> mi[<span class="number">14</span>];</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">return</span> mi[st-<span class="string">&#x27;0&#x27;</span>+<span class="number">25</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	string a;</span><br><span class="line">	<span class="keyword">while</span>(cin&gt;&gt;a)&#123;</span><br><span class="line">		<span class="keyword">int</span> b=<span class="number">1</span>,m=<span class="number">1</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;(a.<span class="built_in">length</span>()+<span class="number">1</span>)/<span class="number">2</span>;i++)&#123;</span><br><span class="line">			<span class="keyword">if</span>(a[i]!=a[a.<span class="built_in">length</span>()<span class="number">-1</span>-i]) b=<span class="number">0</span>;</span><br><span class="line">			<span class="keyword">if</span>(<span class="built_in">rrr</span>(a[i])!=a[a.<span class="built_in">length</span>()<span class="number">-1</span>-i]) m=<span class="number">0</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		cout&lt;&lt;a&lt;&lt;ans[m*<span class="number">2</span>+b]&lt;&lt;<span class="string">&quot;\n&quot;</span>&lt;&lt;<span class="string">&quot;\n&quot;</span>; <span class="comment">//m*2+b這技巧..orz</span></span><br><span class="line">	&#125;	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>心得:</strong><br>我個人對於m*2+b這個技巧感到佩服，因為它直接省掉好幾個if;然後注意0和O在題目裡面是視為一樣。然後這題要很小心鏡像詞的表很容易打錯(QQ)</p>
<h1 id="省思與想法"><a href="#省思與想法" class="headerlink" title=" 省思與想法"></a> 省思與想法</h1><p> 我發現隨著題目愈來愈困難，必須將解題過程記錄下來，並撰寫題解，以及思索更好的解題方式(才能在競賽時把coding的過程降低失誤率)而許多題目看似有著複雜的輸出入，但只要有巧妙的作法，便能將題目迎刃而解。<br> 而要將做法練得更巧妙，除了認真刷題外，也可多參考網友們的題解或和同儕、老師討論，並對於寫過的AC Code隨時翻出來解討是否有更加解法。</p>
]]></content>
      <categories>
        <category>C++語法</category>
      </categories>
      <tags>
        <tag>演算法入門經典</tag>
        <tag>語法</tag>
      </tags>
  </entry>
</search>
